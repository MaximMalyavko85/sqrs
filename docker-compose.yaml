version: '3.8'

services:
  rabbitmq:
    image: rabbitmq:3.10.7-management
    container_name: ms_rabbitmq
    ports:
      - ${RABBIT_PORT}:5672
      - '15672:15672'
    environment:
      RABBITMQ_DEFAULT_USER: rabbit
      RABBITMQ_DEFAULT_PASS: rabbit
    volumes:
     - ./docker:/var/lib/rabbitmq
  mongo:
    image: mongo
    container_name: ms_mongo
    volumes:
      - './docker/data_mongo:/data/db'
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
    command:
      - --auth
    restart: always
    ports:
      - '${MONGO_PORT}:27017'
  postgres:
    image: postgres
    container_name: ms_postgre
    environment:
      #Note that POSTGRES_USER creates a user in Postgres, not in /etc/passwd
      POSTGRES_USER: ${POSTGRES_USER} 
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes: 
      - ./docker:/var/lib/postgresql/data
    ports:
      - '${POSTGRES_PORT}:5432'
    restart: unless-stopped
  notifications:
    image: api-notifications
    container_name: api-notifications
    build:
      context: .
      dockerfile: apps/notifications/Dockerfile
      target: development
    command: pnpm run start:dev notifications
    ports:
      - '${API_NOTIFICATIONS_PORT}:9001'
  payments:
    image: api-payments
    container_name: api-payments
    build:
      context: .
      dockerfile: apps/payments/Dockerfile
      target: development
    command: pnpm run start:dev payments
    ports:
      - '${API_PAYMENTS_PORT}:9002'
  api-auth:
    image: api-auth
    container_name: api-auth
    build:
      context: .
      dockerfile: apps/api/Dockerfile
      target: development
    command: pnpm run start:dev api
    ports:
      - '${API_AUTH_PORT}:9000'
    restart: on-failure
    depends_on:
      - rabbitmq
      

 